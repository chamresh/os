 #include<stdio.h>
 #define max 25
 void main()
 {
 int frag[max],b[max],f[max],i,j,nb,nf,temp,highest=0;
 static int bf[max],ff[max];
 int flag,fragi=0;
 printf("\n__Worst Fit__\n");
 printf("\nEnter the number of memory blocks:");
 scanf("%d",&nb);
 printf("Enter the number of Process:");
 scanf("%d",&nf);
 printf("\nEnter the size of the memory blocks:\n");
 for(int i=1;i<=nb;i++)
 {
 printf("Block %d: ",i);
 scanf("%d",&b[i]);
 ff[i]=i;
}
 printf("Enter the size of the processes :\n");
 for(i=1;i<=nf;i++)
 {
 printf("Process %d: ",i);
 scanf("%d",&f[i]);
 }
 int y,z,temp1;
 for(y=1;y<=nb;y++)
 {
 for(z=y;z<=nb;z++)
 {
 if(b[y]<b[z])
 {
 temp=b[y];
 b[y]=b[z];
 b[z]=temp;
 temp1=ff[y];
 ff[y]=ff[z];
 ff[z]=temp1;
 }
 }
 }
 int flagn[max];
 int fragx=0;
 printf("\n\nProcess No\tProcess Size\tMemory No\tMemory Size\tRemaining\n");
 for(i=1;i<=nf;i++)
 {
 flag=1;
 for(int j=1;j<=nb;j++)
 {
 if(f[i]<=b[j])
 {flagn[j]=1;
 printf("%-15d\t%-15d\t%-15d\t%-15d\t",i,f[i],ff[j],b[j]);
b[j]=b[j]-f[i];
 fragi=fragi+b[j];
 printf("%-15d\n",b[j]);
 break;}
 else
 {flagn[j]=0;
 flag++;
 }
 }
 if(flag>nb)
 printf("%-15d\t%-15d\t%-15s\t%-15s\t%-15s\n",i,f[i],"Has to wait..","..","..");}}
 COMMANDS:
 skcet@sk-mca-507:~$ gedit *worstfit.c
 skcet@sk-mca-507:~$ cc *worstfit.c
 skcet@sk-mca-507:~$ ./a.out
 INPUT:
 __Worst Fit__
 Enter the number of memory blocks:5
 Enter the number of Process:4
 Enter the size of the memory blocks:
 Block 1: 100
 Block 2: 500
 Block 3: 200
 Block 4: 300
 Block 5: 600
 Enter the size of the processes :
 Process 1: 212
 Process 2: 417
 Process 3: 112
 Process 4: 426
OUTPUT:
 212            
Process No Process Size Memory No Memory Size Remaining
 1              
 5              
2              
3              
4              
 417            
 112            
 426            
RESULT :  
 600            
 2              
 5              
 500            
 388            
 Has to wait..   ..            
 388 
 83 
 276 
 ..
