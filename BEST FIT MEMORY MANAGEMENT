 #include<stdio.h>
 #define max 25
 void main()
 {
 int frag[max],b[max],f[max],i,j,nb,nf,temp,lowest=10000;
 static int bf[max],ff[max],fragi=0;
 printf("\n___Best Fit___\n");
 printf("\nEnter the number of blocks:");
 scanf("%d",&nb);
 printf("\nEnter the number of files:");
 scanf("%d",&nf);
 printf("\nEnter the size of the blocks:-\n");
 for(i=1;i<=nb;i++){printf("Block %d:",i);
 scanf("%d",&b[i]);
 ff[i]=i;
 }
 printf("\nEnter the size of the processors :-\n");
 for(i=1;i<=nf;i++){
printf("Process %d:",i);
 scanf("%d",&f[i]);
 }
 int y,m,z,temp1,flag;
 for(y=1;y<=nb;y++)
 {
 for(z=y;z<=nb;z++)
 {
 if(b[y]>b[z])
 {
 temp=b[y];
 b[y]=b[z];
 b[z]=temp;
 temp1=ff[y];
 ff[y]=ff[z];
 ff[z]=temp1;
 }
 }
 }
 int flagn[max];
 int fragx=0;
 printf("\n\nProcess_No\tProcess_Size\tBlock_No\tBlock_Size\tFragment\n");
 for(i=1;i<=nf;i++)
 {
 flag=1;
 for(j=1;j<=nb;j++)
 {
 if(f[i]<=b[j]){
 flagn[j]=1;
 printf("%-15d\t%-15d\t%-15d\t%-15d\t",i,f[i],ff[j],b[j]);
 b[j]=b[j]-f[i];
 fragi=fragi+b[j];
 printf("%-15d\n",b[j]);
 break;
}
 else
 {
 flagn[j]=0;
 flag++;
 }
 }
 if(flag>nb)
 printf("%-15d\t%-15d\t%-15s\t%-15s\t%-15s\n",i,f[i],"Has to wait..","..","..");
 }
 }
 COMMANDS:
 skcet@sk-mca-507:~$ gedit bestfit.c
 skcet@sk-mca-507:~$ cc bestfit.c
 skcet@sk-mca-507:~$ ./a.out
 INPUT:
 ___Best Fit___
 Enter the number of blocks:5
 Enter the number of files:4
 Enter the size of the blocks:
Block 1:100
 Block 2:500
 Block 3:200
 Block 4:300
 Block 5:600
 Enter the size of the processors :
Process 1:212
 Process 2:417
Process 3:112
 Process 4:426
 OUTPUT:
 Process_No Process_Size Block_No Block_Size Fragment
 1              
 212            
2              
3              
4              
 417            
 112            
 426            
RESULT:
 4              
 300            
 2              
 3              
 5              
 500            
 200            
 600            
 88 
 83 
 88 
 174
